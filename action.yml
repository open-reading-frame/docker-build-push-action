name: docker-build-push
description: Build a docker image and optionally push to a registry. Caches layers with actions/cache.

inputs:
  context:
    description: Context for the docker build command
    required: false
  dockerfile:
    description: Path to Dockerfile
    required: false
  platforms:
    description: Comma-delimited list of platforms to build for
    required: false
  load:
    description: Load the docker image for subsequent steps
    required: false
    default: false
  push:
    description: Push the built image
    required: false
    default: false
  tags:
    description: List of tags for the build image
    required: false
  registry:
    description: Registry to log into if pulling or pushing from private registry
    required: false
  username:
    description: Username for private registry login
    required: false
  password:
    description: Password for private registry login
    required: false
  build-args:
    description: Args expected at build time
    required: false

runs:
  using: composite
  steps:
    - name: Checkout calling repository
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Log into registry
      uses: docker/login-action@v2
      if: ${{ inputs.username && inputs.password }}
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    - name: Build and push
      id: docker-build
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        tags: ${{ inputs.tags }}
        load: ${{ inputs.load }}
        push: ${{ inputs.push }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        build-args: ${{ inputs.build-args }}
    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Image digest
      if: ${{ fromJSON(inputs.load) }}
      shell: bash
      run: echo "${{ steps.docker-build.outputs.digest }}"
